DWAPlannerROS:

  prune_plan: true # Start following closest point of global plan, not first point (if different).

# Robot Configuration Parameters
  max_vel_x: 0.4 # This is the ceiling of the vel x, but the generated vel is: acc_lim_x / controller frequency (5)
  min_vel_x: 0.0 

  max_vel_y: 0.0 
  min_vel_y: 0.0 

  max_vel_trans: 0.4 # choose slightly less than the base's capability
  min_vel_trans: 0.1  # this is the min trans velocity when there is negligible rotational velocity
  trans_stopped_vel: 0.05

  # Warning!
  #   do not set min_trans_vel to 0.0 otherwise dwa will always think translational velocities
  #   are non-negligible and small in place rotational velocities will be created.

  max_vel_theta: 0.8  # choose slightly less than the base's capability
  min_vel_theta: 0.1  # this is the min angular velocity when there is negligible translational velocity
  theta_stopped_vel: 0.1 # Below what maximum rotation velocity we consider the robot to be stopped in rotation
  
  acc_lim_x: 2.0 # The acceleration limit of the robot in the x direction
  acc_lim_theta: 2.0 # The acceleration limit of the robot in the theta direction
  acc_lim_y: 0.0 # The acceleration limit of the robot in the y direction

# Goal Tolerance Parameters
  yaw_goal_tolerance: 0.2  # Within what maximum angle difference we consider the robot to face goal direction
  xy_goal_tolerance: 0.20  # Within what maximum distance we consider the robot to be in goal
  latch_xy_goal_tolerance: false # Should the robot spin when reaching the goal tolerance or not

# Forward Simulation Parameters
  sim_time: 2.0       # The amount of time to roll trajectories out for in seconds
  vx_samples: 20       # The number of samples to use when exploring the x velocity space
  vy_samples: 0       # The number of samples to use when exploring the x velocity space (diff drive robot, there is only one sample). Doesnt matter due to acc_lim_y = 0, but good to have
  vth_samples: 40 # The number of samples to use when exploring the theta velocity space

# Trajectory Scoring Parameters
  path_distance_bias: 32.0      # 64.0   - weighting for how much it should stick to the global path plan
  goal_distance_bias: 20.0      # 24.0   - weighting for how much it should attempt to reach its goal
  occdist_scale: 0.05            # 0.5   - weighting for how much the controller should avoid obstacles
  forward_point_distance: 0.325 # 0.325  - how far along to place an additional scoring point
  stop_time_buffer: 0.2         # 0.2    - The amount of time that the robot must stop before a collision in order for a trajectory to be considered valid (in seconds)
  scaling_speed: 0.15           # 0.25   - absolute velocity at which to start scaling the robot's footprint
  max_scaling_factor: 0.2       # 0.2    - how much to scale the robot's footprint when at speed.

# Oscillation Prevention Parameters
  oscillation_reset_dist: 0.05  # 0.05   - how far to travel before resetting oscillation flags
  oscillation_reset_angle: 0.2  # 0.2     - The angle the robot must turn before oscillation flags are reset, in radians

# Debugging
  publish_traj_pc : true
  publish_cost_grid_pc: true
  global_frame_id: odom


# Differential-drive robot configuration - necessary?
#  holonomic_robot: false
